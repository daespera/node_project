[{"/home/app/src/serviceWorker.js":"1","/home/app/src/App.js":"2","/home/app/src/index.js":"3","/home/app/src/components/Sidebar.js":"4","/home/app/src/components/Login.js":"5","/home/app/src/components/PrivateRoute.js":"6","/home/app/src/components/Users.js":"7","/home/app/src/components/Utility/Filter/FilterGroup.js":"8","/home/app/src/components/Utility/Filter/RulesGroup.js":"9","/home/app/src/components/Utility/Filter/FilterBuilder.js":"10","/home/app/src/components/Utility/Toast/ToastProvider.js":"11","/home/app/src/components/Utility/Toast/ToastContainer.js":"12","/home/app/src/components/Utility/Toast/Toast.js":"13"},{"size":5226,"mtime":1603155992767,"results":"14","hashOfConfig":"15"},{"size":2056,"mtime":1611835247725,"results":"16","hashOfConfig":"15"},{"size":464,"mtime":1606737537297,"results":"17","hashOfConfig":"15"},{"size":1402,"mtime":1610797947553,"results":"18","hashOfConfig":"15"},{"size":3235,"mtime":1610619181916,"results":"19","hashOfConfig":"15"},{"size":823,"mtime":1610619186735,"results":"20","hashOfConfig":"15"},{"size":16404,"mtime":1611894540782,"results":"21","hashOfConfig":"15"},{"size":298,"mtime":1610797645140,"results":"22","hashOfConfig":"15"},{"size":4362,"mtime":1611322572056,"results":"23","hashOfConfig":"15"},{"size":595,"mtime":1610526303078,"results":"24","hashOfConfig":"15"},{"size":2523,"mtime":1611320757113,"results":"25","hashOfConfig":"15"},{"size":743,"mtime":1610800596048,"results":"26","hashOfConfig":"15"},{"size":1681,"mtime":1610859257414,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"lspiay",{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"30"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":1,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"30"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":3,"warningCount":44,"fixableErrorCount":0,"fixableWarningCount":4,"source":"46","usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"30"},{"filePath":"60","messages":"61","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"30"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"30"},"/home/app/src/serviceWorker.js",[],["66","67"],"/home/app/src/App.js",["68","69","70"],"\r\nimport React from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport Sidebar from \"./components/Sidebar\";\r\nimport Login from \"./components/Login\";\r\nimport PrivateRoute from \"./components/PrivateRoute\";\r\nimport Users from \"./components/Users\";\r\nimport ToastProvider from \"./components/Utility/Toast/ToastProvider\";\r\n\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\n\r\nexport default class App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // Moblie first\r\n    this.state = {\r\n      isMobile: true,\r\n      list: [],\r\n      showNavigation: true\r\n    };\r\n\r\n    this.previousWidth = -1;\r\n  }\r\n\r\n  updateWidth() { \r\n    const width = window.innerWidth;\r\n    const widthLimit = 576;\r\n    const isMobile = width <= widthLimit;\r\n    const wasMobile = this.previousWidth <= widthLimit;\r\n\r\n    this.previousWidth = width;\r\n  }\r\n\r\n  /**\r\n   * Add event listener\r\n   */\r\n  componentDidMount() {\r\n    this.updateWidth();\r\n    window.addEventListener(\"resize\", this.updateWidth.bind(this));\r\n  }\r\n     \r\n  /**\r\n   * Remove event listener\r\n   */\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.updateWidth.bind(this));\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <Router>\r\n        <div className=\"wrapper d-flex align-items-stretch\">\r\n          {this.state.showNavigation && <Sidebar/>}\r\n          <div id=\"content\" className=\"py-4 px-2 py-md-4.5 pt-5\">\r\n            <ToastProvider>\r\n              <Switch>\r\n                <Route\r\n                  exact path='/login'\r\n                  render={ (props) => (\r\n                    <Login toogleNavigation={() => this.setState({showNavigation: !this.state.showNavigation})} {...props} />\r\n                  )}\r\n                /> \r\n                <PrivateRoute exact path='/users' component={Users} />\r\n              </Switch>\r\n            </ToastProvider>\r\n          </div>\r\n          \r\n        </div>\r\n        \r\n      </Router>\r\n    )\r\n  };\r\n}\r\n\r\n","/home/app/src/index.js",[],"/home/app/src/components/Sidebar.js",[],"/home/app/src/components/Login.js",["71","72","73","74"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from 'axios';\r\n\r\nimport { useToast } from \"./Toast/ToastProvider\";\r\n\r\nconst Login = props => {\r\n  const { addToast } = useToast();\r\n  const [credentials, setCredentials] = useState({\r\n    user: \"\",\r\n    password: \"\"\r\n  })\r\n\r\n  let handleChange = (e) => {\r\n    const value = e.target.value;\r\n    setCredentials({\r\n      ...credentials,\r\n      [e.target.name]: value\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    props.toogleNavigation();\r\n  }, []);\r\n\r\n  let logIn = async () => {\r\n    var data;\r\n    var statusCode;\r\n    try {\r\n      const response = await axios({\r\n        method: 'post',\r\n        url: '/rest_proxy',\r\n        headers: { \r\n          'Content-Type': 'application/json',\r\n          'CSRF-Token': csrf_token\r\n        },\r\n        data: {_endpoint: \"oauth/token\",...credentials}\r\n      });\r\n      statusCode = response.status;\r\n      data = response.data;\r\n      document.cookie = \"access_token=\" + data.accessToken;\r\n      props.toogleNavigation();\r\n      props.history.push('/');\r\n    } catch (error) {\r\n      statusCode = error.response.status;\r\n      data = error.response.data;\r\n    }\r\n    if (statusCode != 200) {\r\n      for(var attributename in data.details[0]) {\r\n        addToast(data.details[0][attributename],'danger',data.message);\r\n      }\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"d-flex align-items-center justify-content-center\">\r\n      <div className=\"card w-50\" border=\"secondary\">\r\n        <div className=\"card-header\">Sign In</div>\r\n        <div className=\"card-body\">\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-sm-2 col-form-label col-form-label-sm\">Email address</label>\r\n            <div className=\"col-sm-10\">\r\n              <input \r\n                type=\"user\"\r\n                name=\"user\"\r\n                value={credentials.user}\r\n                onChange={handleChange}\r\n                className=\"form-control form-control-sm\" \r\n                placeholder=\"Email\" \r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-sm-2 col-form-label col-form-label-sm\">Password</label>\r\n            <div className=\"col-sm-10\">\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                value={credentials.password}\r\n                onChange={handleChange}\r\n                className=\"form-control form-control-sm\"\r\n                placeholder=\"Password\" />\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <div className=\"custom-control custom-checkbox\">\r\n              <input type=\"checkbox\" className=\"custom-control-input\" id=\"customCheck1\" />\r\n              <label className=\"custom-control-label\" htmlFor=\"customCheck1\">Remember me</label>\r\n            </div>\r\n          </div>\r\n          <button type=\"button\" className=\"btn btn-primary btn-block\" onClick={logIn}>Submit</button>\r\n          <p className=\"forgot-password text-right\">\r\n            Forgot <a href=\"#\">password?</a>\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>  \r\n  );\r\n}\r\n\r\nexport default Login;","/home/app/src/components/PrivateRoute.js",["75","76","77","78","79"],"import React from \"react\";\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { useToast } from \"./Toast/ToastProvider\";\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n\tconst { addToast } = useToast();\r\n\t\r\n\tReact.useEffect(() => {\r\n\t\tif((document.cookie.match('(^|; )access_token=([^;]*)')||0)[2] == 'undefined' \r\n\t    || (document.cookie.match('(^|; )access_token=([^;]*)')||0)[2] == '')\r\n\t\t\taddToast('please log in','warning','unauthenticated');\r\n\t},[]);\r\n\r\n\treturn(\r\n\t  <Route {...rest} render={(props) => (\r\n\t    (document.cookie.match('(^|; )access_token=([^;]*)')||0)[2] != 'undefined' \r\n\t    && (document.cookie.match('(^|; )access_token=([^;]*)')||0)[2] != ''\r\n\t      ? <Component {...props} />\r\n\t      : <Redirect to='/login' />\r\n\t  )} />\r\n\t)\r\n}\r\n\r\nexport default PrivateRoute;","/home/app/src/components/Users.js",["80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126"],"import React, { useState, useEffect, useContext } from \"react\";\r\nimport axios from 'axios';\r\nimport { useToast, setCallBack } from \"./Utility/Toast/ToastProvider\";\r\nimport FilterBuilder from \"./Utility/Filter/FilterBuilder\";\r\n\r\nconst Users = () => {\r\n  const { addToast } = useToast(),\r\n    [where,setWhere] = useState({combinator: \"and\",rules: []}),\r\n    [data, setData] = useState({users: []}),\r\n    [size, setSize] = useState(5),\r\n    [page, setPage] = useState(1),\r\n    [action, setAction] = useState(''),\r\n    [user, setUser] = useState({\r\n      first_name: \"\",\r\n      last_name: \"\",\r\n      email: \"\",\r\n      type: \"\",\r\n      password: \"\",\r\n      key: \"\"\r\n    }),\r\n    [filters,setFilters] = useState([]),\r\n    [textBoxError, setTextBoxError] = useState([]),\r\n    filterFields = {id:\"ID\",\r\n      last_name:\"Last Name\",\r\n      first_name:\"First Name\",\r\n      email:\"Email\",\r\n      type:\"Type\"},\r\n    [lastListDate, setLastListDate] = useState('');\r\n\r\n  //_where = {...where,...test};\r\n  /* let rule = [{\r\n        \"field\": \"firstName\",\r\n        \"operator\": \"null\",\r\n        \"value\": \"\"\r\n      }];\r\n  setWhere({rules: [...where.rules,rule]});\r\n  rule = [{combinator: \"and\",rules: []}];\r\n  ///_where.rules = [..._where.rules,...rule];\r\n  console.log(where); */\r\n\r\n\r\n  let handleChange = e => {\r\n    const value = e.target.value;\r\n    setUser({\r\n      ...user,\r\n      [e.target.name]: value\r\n    });\r\n  },\r\n\r\n  handleAttributeToggle = async name => {\r\n    console.log(name);\r\n    let _user_attributes = user.user_attributes;\r\n    console.log(user.user_attributes[name]);\r\n    _user_attributes[name] = user.user_attributes[name] == 'false' || user.user_attributes[name] == undefined ? 'true' : 'false';\r\n    console.log(_user_attributes);\r\n    setUser({\r\n      ...user,\r\n      user_attributes: _user_attributes\r\n    });\r\n    try {\r\n      const params = {\r\n        _endpoint: \"user/\"+user.id+\"/user_attribute\",\r\n        attribute: name,\r\n        value: _user_attributes[name]\r\n      },\r\n      mapping = {\r\n        ['ACL_USER_ADD']: \"ACL user add\",\r\n        ['ACL_USER_EDIT']: \"ACL user edit\",\r\n        ['ACL_USER_DELETE']: \"ACL user delete\",\r\n        ['ACL_USER_RETRIEVE']: \"ACL user retrieve\"\r\n      },\r\n      response = await axios({\r\n        method: 'put',\r\n        url: '/rest_proxy',\r\n        headers: { \r\n          'Content-Type': 'application/json',\r\n          'CSRF-Token': csrf_token\r\n        },\r\n        data: params\r\n      });\r\n      addToast(mapping[name]+\" \"+response.data.message);\r\n    } catch (error) {\r\n      if(error.response?.data.message == \"Invalid credentials.\"){\r\n        addToast('user is not logged in or session has already expired','danger','unauthenticated');\r\n        document.cookie = \"access_token=\" + '';\r\n      }\r\n    }\r\n  },\r\n\r\n  Save = async e => {\r\n    var _response;\r\n    var statusCode;\r\n    setTextBoxError([]);\r\n    let _method = action == 'add' ? 'post' : 'put';\r\n    let endpoint = action == 'add' ? 'user' : 'user/'+user.id;\r\n    try {\r\n      const response = await axios({\r\n        method: _method,\r\n        url: '/rest_proxy',\r\n        headers: { \r\n          'Content-Type': 'application/json',\r\n          'CSRF-Token': csrf_token\r\n        },\r\n        data: {_endpoint: endpoint,...user}\r\n      });\r\n      statusCode = response.status;\r\n      _response = response.data;\r\n      addToast(_response.message);\r\n      if(action == 'edit')\r\n        setData({\r\n          users: data.users.map(el => (el.id === response.data.data.id ? _response.data : el))\r\n        });\r\n      else\r\n        setData({\r\n          users:[...data.users,_response.data]\r\n        });\r\n      Cancel();\r\n      setPage(1);\r\n    } catch (error) {\r\n      statusCode = error.response.status;\r\n      _response = error.response.data;\r\n    }\r\n    if (statusCode > 299) {\r\n      let error = {\r\n        toast_errors: [],\r\n        textbox_error: []\r\n      };\r\n      for(var attributename in _response.details[0]) {\r\n        error.textbox_error.push(attributename);\r\n        error.toast_errors.push(_response.details[0][attributename]);\r\n      }\r\n      setTextBoxError(error.textbox_error);\r\n      if(_response.message == \"Invalid credentials.\"){\r\n        addToast('user is not logged in or session has already expired','danger','unauthenticated');\r\n        document.cookie = \"access_token=\" + '';\r\n      }else{\r\n        addToast(error.toast_errors,'danger',_response.message);\r\n      }\r\n    }\r\n  },\r\n\r\n  Fetch = async (scrolling = false) => {\r\n    var statusCode;\r\n    let params = {\r\n      _endpoint: \"user\",\r\n      include: \"user_attributes\",\r\n      size: size,\r\n      page: page\r\n    },\r\n    filter = {filters: [...filters]};\r\n    params = filters.length ? {...params, filter} : params;\r\n    let _where = {where: where};\r\n\r\n    if(scrolling){\r\n      console.log(scrolling);\r\n      _where = {where: {combinator: \"and\",rules: [{\"field\": \"`created_at`\",\"operator\": \"lt\",\"value\": lastListDate}]}};\r\n      _where.where.rules.push(where);\r\n    }\r\n    if(_where.where.rules.length)\r\n      params = {...params, ..._where};\r\n    try {\r\n      const response = await axios({\r\n        method: 'get',\r\n        url: '/rest_proxy',\r\n        headers: { \r\n          'Content-Type': 'application/json',\r\n        },\r\n        params: params\r\n      }),\r\n      _data = [...data.users,...response.data.data];\r\n      statusCode = response.status;\r\n      console.log(scrolling ? {users: _data} : {users: [...response.data.data]});\r\n      setData(scrolling ? {users: _data} : {users: [...response.data.data]});\r\n      \r\n      setLastListDate(response.data.data.length ? response.data.data[response.data.data.length-1].created_at : 'none');\r\n      //console.log(response.data.data[response.data.data.length-1].created_at);\r\n      if(response.data.message == \"no data\")\r\n        addToast(response.data.message);\r\n    } catch (error) {\r\n      if(error.response?.data.message == \"Invalid credentials.\"){\r\n        addToast('user is not logged in or session has already expired','danger','unauthenticated');\r\n        document.cookie = \"access_token=\" + '';\r\n      }\r\n      //statusCode = error.response.status;\r\n      //data = error.response.data;\r\n    }\r\n  },\r\n\r\n  Cancel = e => {\r\n    setAction('');\r\n    setUser({\r\n      first_name: \"\",\r\n      last_name: \"\",\r\n      email: \"\",\r\n      type: \"\",\r\n      password: \"\",\r\n      key: \"\"\r\n    });\r\n    setTextBoxError([]);\r\n  },\r\n\r\n  Select = (item,key) => (event) => {\r\n    setAction('edit');\r\n    item.key = key;\r\n    console.log(item);\r\n    setUser(item);\r\n    setTextBoxError([]);\r\n  },\r\n\r\n  DeleteRequest = (userID, userKey) => {\r\n    addToast('delete user?','confirm','Delete',response => response && DeleteConfirm(response,userID,userKey));\r\n  },\r\n\r\n  DeleteConfirm = async (confirm, userID, userKey) => {\r\n    console.log(confirm);\r\n    console.log(userID);\r\n    let params = {\r\n      _endpoint: \"user/\"+userID\r\n    };\r\n    try {\r\n      const response = await axios({\r\n        method: 'delete',\r\n        url: '/rest_proxy',\r\n        headers: { \r\n          'Content-Type': 'application/json',\r\n          'CSRF-Token': csrf_token\r\n        },\r\n        params: params\r\n      }),\r\n      _data = data;\r\n      _data.users.splice(userKey, 1);\r\n      setData({..._data});\r\n      Cancel()\r\n    } catch (error) {\r\n      if(error.response?.data.message == \"Invalid credentials.\"){\r\n        addToast('user is not logged in or session has already expired','danger','unauthenticated');\r\n        document.cookie = \"access_token=\" + '';\r\n      }\r\n    }\r\n  },\r\n\r\n  Add = e => {\r\n    setAction('add');\r\n    setUser({\r\n      first_name: \"\",\r\n      last_name: \"\",\r\n      email: \"\",\r\n      type: \"\",\r\n      password: \"\"\r\n    });\r\n    setTextBoxError([]);\r\n  };\r\n\r\n  useEffect(() => {Fetch()}, [page]);\r\n\r\n  return (\r\n    <>\r\n      <div className={`card mb-2 ${action == '' && 'd-none'}`} border=\"secondary\">\r\n        <div className=\"card-header card-header-custom\">\r\n          <ul className=\"nav nav-tabs card-header-tabs card-header-tabs-custom\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link disabled\" href=\"#\"><b>{action == 'add' ? 'Create' : 'Update'}</b></a>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <button type=\"button\" className={`btn btn-sm btn-link nav-link ${action == 'edit' && 'active'} ${action == 'add' && 'd-none'}`} onClick={e => setAction('edit')}>Info</button>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n              <button type=\"button\" className={`btn btn-sm btn-link nav-link ${action == 'edit_attributes' && 'active'} ${action == 'add' && 'd-none'}`} onClick={e => setAction('edit_attributes')}>Attributes</button>\r\n            </li>\r\n          </ul>\r\n\r\n        </div>\r\n        <div className={`card-body ${(action == 'edit_attributes' ) && 'd-none'}`}>\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-sm-2 col-form-label col-form-label-sm\">First name</label>\r\n            <div className=\"col-sm-10\">\r\n              <input \r\n                type=\"text\"\r\n                value={user.first_name}\r\n                onChange={handleChange}\r\n                name=\"first_name\"\r\n                className={`form-control form-control-sm ${textBoxError.includes('first_name') && 'is-invalid'}`}\r\n                placeholder=\"First Name\" \r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-sm-2 col-form-label col-form-label-sm\">Last name</label>\r\n            <div className=\"col-sm-10\">\r\n              <input \r\n              type=\"text\"\r\n              value={user.last_name}\r\n              onChange={handleChange}\r\n              name=\"last_name\"\r\n              className={`form-control form-control-sm ${textBoxError.includes('last_name') && 'is-invalid'}`}\r\n              placeholder=\"Last Name\" \r\n            />\r\n            </div>            \r\n          </div>\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-sm-2 col-form-label col-form-label-sm\">Email address</label>\r\n            <div className=\"col-sm-10\">\r\n              <input \r\n                type=\"text\"\r\n                value={user.email}\r\n                onChange={handleChange}\r\n                name=\"email\"\r\n                className={`form-control form-control-sm ${textBoxError.includes('email') && 'is-invalid'}`}\r\n                placeholder=\"Email\" \r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group row\">\r\n            <label className=\"col-sm-2 col-form-label col-form-label-sm\">Type</label>\r\n            <div className=\"col-sm-10\">\r\n              <select value={user.type}\r\n                name=\"type\"\r\n                className={`form-control form-control-sm ${textBoxError.includes('type') && 'is-invalid'}`}\r\n                onChange={handleChange}>\r\n                <option value=\"\">Select one</option>\r\n                <option value=\"ADMIN\">Admin</option>\r\n                <option value=\"SUPER_USER\">Super User</option>\r\n                <option value=\"USER\">User</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div className={`form-group row ${action != 'add' && 'd-none'}`}>\r\n            <label className=\"col-sm-2 col-form-label col-form-label-sm\">Password</label>\r\n            <div className=\"col-sm-10\">\r\n              <input\r\n                type=\"password\"\r\n                value={action == 'add' && user.password}\r\n                onChange={handleChange}\r\n                name=\"password\"\r\n                className={`form-control form-control-sm ${textBoxError.includes('password') && 'is-invalid'}`}\r\n                placeholder=\"Password\" />\r\n            </div>\r\n          </div>\r\n          <button type=\"button\" className=\"btn btn-sm btn-success mr-1\" onClick={Save}>{action == 'add' ? 'Create' : 'Update'}</button>\r\n          <button type=\"button\" className={`btn btn-sm btn-danger mr-1 ${action == 'add' && 'd-none'}`} onClick={e => DeleteRequest(user.id,user.key)}>Delete</button>\r\n          <button type=\"button\" className=\"btn btn-sm btn-warning\" onClick={Cancel}>Cancel</button>\r\n        </div>\r\n        <div className={`card-body ${action != 'edit_attributes' && 'd-none'}`}>\r\n          <div className=\"card w-50\">\r\n            <div className=\"card-body\">\r\n              <h5 className=\"card-title\">ACL - user</h5>\r\n              <div className=\"custom-control custom-switch\">\r\n                <input type=\"checkbox\" className=\"custom-control-input\" defaultChecked={user.user_attributes && user.user_attributes.ACL_USER_ADD == 'true'}/>\r\n                <label className=\"custom-control-label\" onClick={() => handleAttributeToggle(\"ACL_USER_ADD\")} >Add</label>\r\n              </div>\r\n              <div className=\"custom-control custom-switch\">\r\n                <input type=\"checkbox\" className=\"custom-control-input\" defaultChecked={user.user_attributes && user.user_attributes.ACL_USER_RETRIEVE == 'true'}/>\r\n                <label className=\"custom-control-label\" onClick={() => handleAttributeToggle(\"ACL_USER_RETRIEVE\")} >Retrieve</label>\r\n              </div>\r\n              <div className=\"custom-control custom-switch\">\r\n                <input type=\"checkbox\" className=\"custom-control-input\" defaultChecked={user.user_attributes && user.user_attributes.ACL_USER_EDIT == 'true'}/>\r\n                <label className=\"custom-control-label\" onClick={() => handleAttributeToggle(\"ACL_USER_EDIT\")} >Edit</label>\r\n              </div>\r\n              <div className=\"custom-control custom-switch\">\r\n                <input type=\"checkbox\" className=\"custom-control-input\" defaultChecked={user.user_attributes && user.user_attributes.ACL_USER_DELETE == 'true'}/>\r\n                <label className=\"custom-control-label\" onClick={() => handleAttributeToggle(\"ACL_USER_DELETE\")} >Delete</label>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <br/>\r\n          <button type=\"button\" className=\"btn btn-sm btn-warning\" onClick={Cancel}>Cancel</button>\r\n        </div>\r\n      </div>\r\n      <div className=\"card\" border=\"secondary\">\r\n        <div className=\"card-header card-header-custom d-flex justify-content-between align-items-center\">\r\n          <b>Users</b>\r\n          {action != 'add' &&\r\n            <button type=\"button\" className=\"btn btn-sm btn-primary\" onClick={Add}>Add</button>\r\n          }\r\n        </div>\r\n        <div className=\"card-body\">\r\n          <FilterBuilder filterFields={filterFields} where={where} setWhere={setWhere}/>\r\n          <button type=\"button\"  className=\"btn btn-sm btn-link\" onClick={e => Fetch(false)}>reload</button>\r\n          <div className=\"table\">\r\n            <div className=\"row header blue\">\r\n              <div className=\"cell col-sm\">\r\n                ID\r\n              </div>\r\n              <div className=\"cell col-sm\">\r\n                Last Name\r\n              </div>\r\n              <div className=\"cell col-sm\">\r\n                First Name\r\n              </div>\r\n              <div className=\"cell col-sm\">\r\n                Email\r\n              </div>\r\n              <div className=\"cell col-sm\">\r\n                Type\r\n              </div>\r\n            </div>\r\n            { data.users.length ?\r\n              data.users.map((user,key) => (\r\n              <div key={key} className=\"row\">\r\n                <div className=\"cell col-sm\" data-title=\"ID\">\r\n                  <button type=\"button\" className=\"btn btn-sm btn-link\" onClick={Select(user,key)}>{user.id}</button>\r\n                </div>\r\n                <div className=\"cell col-sm\" data-title=\"Last Name\">\r\n                  {user.last_name}\r\n                </div>\r\n                <div className=\"cell col-sm\" data-title=\"First Name\">\r\n                  {user.first_name}\r\n                </div>\r\n                <div className=\"cell col-sm\" data-title=\"Email\">\r\n                  {user.email}\r\n                </div>\r\n                <div className=\"cell col-sm\" data-title=\"Email\">\r\n                  {user.type}\r\n                </div>\r\n              </div>\r\n            )):<div className=\"row\"><div className=\"cell col-sm\"><center>nodata</center></div></div>}\r\n          </div>\r\n          <div className=\"text-center\">\r\n            <button type=\"button\" className={`btn btn-link ${lastListDate == 'none' && 'd-none'}`} onClick={e => Fetch(true)}>More</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Users;","/home/app/src/components/Utility/Filter/FilterGroup.js",["127"],"import React, {useContext } from \"react\";\r\n\r\nimport RulesGroup from './RulesGroup';\r\n\r\n\r\nconst FilterGroup = ({ filterFields }) => {\r\n  return (<div style={{margin:\"0px -15px\"}}>\r\n        <RulesGroup indexString=\"where\" filterFields={filterFields}/>\r\n    </div>);\r\n};\r\n\r\nexport default FilterGroup;","/home/app/src/components/Utility/Filter/RulesGroup.js",["128","129","130","131","132","133","134","135","136","137"],"import React, {useState } from \"react\";\r\nimport { useFilter } from \"./FilterBuilder\";\r\n\r\nconst RulesGroup = ({indexString, index, filterFields}) => {\r\n  const { where, setWhere } = useFilter();\r\n  const[toggleFilterAction, setToggleFilterAction] = useState(false),\r\n  changeCombinator = (value) => {\r\n    let _where = where;\r\n    eval('_'+indexString)[\"combinator\"] = value;\r\n    setWhere({..._where});\r\n  },\r\n  addRule = (rule) => {\r\n    let _where = where;\r\n    eval('_'+indexString+\".rules\").push(rule);\r\n    setWhere({..._where});\r\n  },\r\n  handleRuleChange = (e,index,prop) => {\r\n    let _where = where;\r\n    eval('_'+indexString+\".rules\")[index][prop] = e.target.value;\r\n    setWhere({..._where});\r\n  },\r\n  removeRule = (index) => {\r\n    let _where = where;\r\n    eval('_'+indexString+\".rules\").splice(index, 1);\r\n    setWhere({..._where});\r\n  },\r\n  removeRuleGroup = (index) => {\r\n    let _where = where,\r\n    _indexString = indexString.split('.');\r\n    _indexString.pop();\r\n    _indexString = _indexString.join('.');\r\n    eval('_'+_indexString+\".rules\").splice(index, 1);\r\n    setWhere({..._where});\r\n  };\r\n\r\n  return (\r\n    <div className=\"border border-secondary p-1\">\r\n      <div className=\"btn-group btn-group-toggle mb-1\" data-toggle=\"buttons\">\r\n        <label className={`btn btn-sm btn-light ${eval(indexString).combinator== 'and' && 'active'}`}>\r\n          <input type=\"radio\" name=\"options\" id=\"option1\" onClick={() => changeCombinator(\"and\")}/> And\r\n        </label>\r\n        <label className={`btn btn-sm btn-light ${eval(indexString).combinator == 'or' && 'active'}`}>\r\n          <input type=\"radio\" name=\"options\" id=\"option2\" onClick={() => changeCombinator(\"or\")}/> Or\r\n        </label>\r\n        <div className={`btn-group ${toggleFilterAction && 'show'}`} role=\"group\">\r\n        <button type=\"button\" className=\"btn btn-sm btn-info dropdown-toggle\" onClick={e => setToggleFilterAction(!toggleFilterAction)} aria-haspopup=\"true\" aria-expanded=\"false\">\r\n          Add\r\n        </button>\r\n        <div className={`dropdown-menu ${toggleFilterAction && 'show'}`} aria-labelledby=\"btnGroupDrop1\">\r\n          <button type=\"button\" className=\"dropdown-item btn btn-sm btn-link mb-1\" onClick={e => {addRule({\"field\": \"id\",\"operator\": \"like\",\"value\": \"\"}); setToggleFilterAction(!toggleFilterAction);}}>Add Filter</button>\r\n          <button type=\"button\" className=\"dropdown-item btn btn-sm btn-link mb-1\" onClick={e => {addRule({combinator: \"and\",rules: []}); setToggleFilterAction(!toggleFilterAction);}}>Add Group</button>\r\n        </div>\r\n      </div>\r\n      <button className={`btn btn-sm btn-outline-danger ${typeof index == 'undefined' && 'd-none'}`} type=\"button\" onClick={e =>{removeRuleGroup(index)}}>Remove Group</button>\r\n      </div>\r\n      \r\n      {eval(indexString).rules.map((filter,index) => (\r\n        (filter.hasOwnProperty('rules')\r\n            ? <div className=\"mb-1 p-1\" key={index}> <RulesGroup index={index} indexString={indexString+\".rules[\"+index+\"]\"} filterFields={filterFields}/> </div>\r\n            : <div className=\"input-group mb-1\" key={index}>\r\n              <select value={filter.field}\r\n                className=\"form-control form-control-sm\"\r\n                onChange={e =>{handleRuleChange(e,index,'field')}}>\r\n                  {Object.keys(filterFields).map((value,index) => (<option key={index} value={value}>{filterFields[value]}</option>))}\r\n              </select>\r\n              <select value={filter.operator}\r\n                className=\"form-control form-control-sm\"\r\n                onChange={e =>{handleRuleChange(e,index,'operator')}}>\r\n                  <option value=\"like\">Like</option>\r\n                  <option value=\"eq\">Equals</option>\r\n                  <option value=\"ne\">Not Equals</option>\r\n                  <option value=\"gt\">Greater Than</option>\r\n                  <option value=\"lt\">Less Than</option>\r\n              </select>\r\n              <input type=\"text\" className=\"form-control form-control-sm\" onChange={e =>{handleRuleChange(e,index,'value')}} placeholder=\"value\"/>\r\n              <div className=\"input-group-append\">\r\n                <button className=\"btn btn-sm btn-outline-danger\" type=\"button\" onClick={e =>{removeRule(index)}}>Remove</button>\r\n              </div>\r\n            </div>\r\n        )        \r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RulesGroup;",["138","139"],"/home/app/src/components/Utility/Filter/FilterBuilder.js",["140","141"],"import React, { useState, createContext, useContext, useCallback } from \"react\";\r\nimport FilterGroup from './FilterGroup';\r\n\r\nexport const FilterContext = createContext();\r\n\r\nconst FilterBuilder = ({filterFields}) => {\r\n\tconst [where,setWhere] = useState({combinator: \"and\",rules: []});\r\n\tconst getFilters = e => {return where};\r\n\treturn (<FilterContext.Provider value={{ where, setWhere, filterFields }}>\r\n\t\t<FilterGroup filterFields={filterFields} where={where}/>\r\n\t</FilterContext.Provider>);\r\n},\r\n\r\nuseFilter = () => {\r\n  const filterHelpers = useContext(FilterContext);\r\n\r\n  return filterHelpers;\r\n};\r\nexport { useFilter };\r\nexport default FilterBuilder;","/home/app/src/components/Utility/Toast/ToastProvider.js",["142","143","144"],"import React, { useState, useContext, useCallback } from \"react\";\r\nimport ToastContainer from \"./ToastContainer\";\r\n\r\nconst ToastContext = React.createContext(null);\r\n\r\nlet id = 1;\r\n\r\nconst ToastProvider = ({ children }) => {\r\n  const [toasts, setToasts] = useState([]),\r\n  [confirm, setConfirm] = useState({callback: \"\"});\r\n\r\n  const triggerCallback = useCallback(\r\n    (id, response) => {\r\n      confirm.callback(response);\r\n      removeToast(id)\r\n    }\r\n  );\r\n\r\n  const addToast = useCallback(\r\n    (content, type, title, callback) => {\r\n      if(callback != undefined)\r\n        setConfirm({...confirm, callback: callback});\r\n      let data = null;\r\n      switch(type) {\r\n        case 'success':\r\n          data = {\r\n            id: id++,\r\n            title: title,\r\n            content: content,\r\n            backgroundColor: '#5cb85c'\r\n          }\r\n          break;\r\n        case 'danger':\r\n          data = {\r\n            id: id++,\r\n            title: title,\r\n            content: content,\r\n            backgroundColor: '#d9534f'\r\n          }\r\n          break;\r\n        case 'info':\r\n          data = {\r\n            id: id++,\r\n            title: title,\r\n            content: content,\r\n            backgroundColor: '#5bc0de'\r\n          }\r\n          break;\r\n        case 'warning':\r\n          data = {\r\n            id: id++,\r\n            title: title,\r\n            content: content,\r\n            backgroundColor: '#f0ad4e'\r\n          }\r\n          break;\r\n\r\n        case 'confirm':\r\n          data = {\r\n            id: id++,\r\n            title: title,\r\n            content: content,\r\n            backgroundColor: '#f0ad4e',\r\n            confirm: 1\r\n          }\r\n          break;\r\n\r\n        default:\r\n          data = {\r\n            id: id++,\r\n            title: title,\r\n            content: content,\r\n            backgroundColor: '#5cb85c'\r\n          }\r\n      }\r\n      setToasts(toasts => [\r\n        ...toasts,\r\n        data\r\n      ]);\r\n    },\r\n    [setToasts]\r\n  ),\r\n\r\n  removeToast = useCallback(\r\n    id => {\r\n      setToasts(toasts => toasts.filter(t => t.id !== id));\r\n    },\r\n    [setToasts]\r\n  );\r\n\r\n  return (\r\n    <ToastContext.Provider\r\n      value={{\r\n        addToast,\r\n        removeToast,\r\n        triggerCallback\r\n      }}\r\n    >\r\n      {children}\r\n      <ToastContainer toasts={toasts} />\r\n    </ToastContext.Provider>\r\n  );\r\n};\r\n\r\nconst useToast = () => {\r\n  const toastHelpers = useContext(ToastContext);\r\n\r\n  return toastHelpers;\r\n};\r\n\r\nexport { ToastContext, useToast };\r\nexport default ToastProvider;","/home/app/src/components/Utility/Toast/ToastContainer.js",["145"],"import React from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\n\r\nimport Toast from \"./Toast\";\r\n\r\nconst ToastContainer = ({ toasts }) => {\r\n  return (\r\n    <>\r\n      <div aria-live=\"polite\" aria-atomic=\"true\">\r\n        <div style={{overflowX: 'hidden',position: 'absolute', top: 0, right: 0}}>\r\n          {\r\n            toasts.map((toast, i) =>(\r\n              <Toast key={i} id={toast.id} title={toast.title} backgroundColor={toast.backgroundColor}, confirm={toast.confirm}>\r\n                {typeof toast.content == 'object' ? toast.content.map((item,i) => <li key={i}>{item}</li>) : toast.content}\r\n              </Toast>\r\n            ))\r\n          }\r\n        </div>\r\n      </div>\r\n    </>\r\n   );\r\n};\r\n\r\nexport default ToastContainer;","/home/app/src/components/Utility/Toast/Toast.js",["146","147","148","149"],"import React, { useEffect } from \"react\";\r\nimport { useToast } from \"./ToastProvider\";\r\n\r\nconst Toast = ({ children, id, title, backgroundColor, confirm }) => {\r\n  const { removeToast, triggerCallback } = useToast();\r\n\r\n  useEffect(() => {\r\n    const timer = confirm == undefined && setTimeout(() => {\r\n      removeToast(id);\r\n    }, 4000);\r\n    return () => {\r\n      confirm == undefined && clearTimeout(timer);\r\n    };\r\n  }, [id, removeToast]);\r\n\r\n  return (\r\n    <div className=\"toast show\" role=\"alert\" aria-live=\"assertive\" aria-atomic=\"true\">\r\n      <div className=\"toast-header\">\r\n        <svg className=\"bd-placeholder-img rounded mr-2\" width=\"20\" height=\"20\" xmlns=\"http://www.w3.org/2000/svg\" preserveAspectRatio=\"xMidYMid slice\" focusable=\"false\" role=\"img\">\r\n          <rect width=\"100%\" height=\"100%\" fill={backgroundColor}></rect>\r\n        </svg>\r\n        <strong className=\"mr-auto\">{title}&nbsp;</strong>\r\n        <small className=\"text-muted\" style={{display: \"none\"}}>just now</small>\r\n        <button type=\"button\" className=\"ml-2 mb-1 close\" data-dismiss=\"toast\" aria-label=\"Close\" onClick={() => removeToast(id)}>\r\n          <span aria-hidden=\"true\">&times;</span>\r\n        </button>\r\n      </div>\r\n      <div className=\"toast-body\">\r\n        {children}\r\n        <div className={`${confirm == undefined && 'd-none'}`}>\r\n          <button type=\"button\" className=\"btn btn-sm btn-success mr-1\" onClick={() => triggerCallback(id,true)}>Yes</button>\r\n          <button type=\"button\" className=\"btn btn-sm btn-danger mr-1\" onClick={() => triggerCallback(id,false)}>No</button>\r\n        </div>          \r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Toast;\r\n",{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","severity":1,"message":"155","line":3,"column":8,"nodeType":"156","messageId":"157","endLine":3,"endColumn":12},{"ruleId":"154","severity":1,"message":"158","line":32,"column":11,"nodeType":"156","messageId":"157","endLine":32,"endColumn":19},{"ruleId":"154","severity":1,"message":"159","line":33,"column":11,"nodeType":"156","messageId":"157","endLine":33,"endColumn":20},{"ruleId":"160","severity":1,"message":"161","line":23,"column":6,"nodeType":"162","endLine":23,"endColumn":8,"suggestions":"163"},{"ruleId":"164","severity":2,"message":"165","line":34,"column":25,"nodeType":"156","messageId":"166","endLine":34,"endColumn":35},{"ruleId":"167","severity":1,"message":"168","line":47,"column":20,"nodeType":"169","messageId":"170","endLine":47,"endColumn":22},{"ruleId":"171","severity":1,"message":"172","line":92,"column":20,"nodeType":"173","endLine":92,"endColumn":32},{"ruleId":"167","severity":1,"message":"174","line":9,"column":66,"nodeType":"169","messageId":"170","endLine":9,"endColumn":68},{"ruleId":"167","severity":1,"message":"174","line":10,"column":69,"nodeType":"169","messageId":"170","endLine":10,"endColumn":71},{"ruleId":"160","severity":1,"message":"175","line":12,"column":4,"nodeType":"162","endLine":12,"endColumn":6,"suggestions":"176"},{"ruleId":"167","severity":1,"message":"168","line":16,"column":66,"nodeType":"169","messageId":"170","endLine":16,"endColumn":68},{"ruleId":"167","severity":1,"message":"168","line":17,"column":69,"nodeType":"169","messageId":"170","endLine":17,"endColumn":71},{"ruleId":"154","severity":1,"message":"177","line":1,"column":38,"nodeType":"156","messageId":"157","endLine":1,"endColumn":48},{"ruleId":"154","severity":1,"message":"178","line":3,"column":20,"nodeType":"156","messageId":"157","endLine":3,"endColumn":31},{"ruleId":"154","severity":1,"message":"179","line":10,"column":12,"nodeType":"156","messageId":"157","endLine":10,"endColumn":19},{"ruleId":"154","severity":1,"message":"180","line":21,"column":14,"nodeType":"156","messageId":"157","endLine":21,"endColumn":24},{"ruleId":"167","severity":1,"message":"174","line":54,"column":57,"nodeType":"169","messageId":"170","endLine":54,"endColumn":59},{"ruleId":"167","severity":1,"message":"174","line":54,"column":98,"nodeType":"169","messageId":"170","endLine":54,"endColumn":100},{"ruleId":"181","severity":1,"message":"182","line":67,"column":9,"nodeType":"183","messageId":"184","endLine":67,"endColumn":41,"fix":"185"},{"ruleId":"181","severity":1,"message":"186","line":68,"column":9,"nodeType":"183","messageId":"184","endLine":68,"endColumn":43,"fix":"187"},{"ruleId":"181","severity":1,"message":"188","line":69,"column":9,"nodeType":"183","messageId":"184","endLine":69,"endColumn":47,"fix":"189"},{"ruleId":"181","severity":1,"message":"190","line":70,"column":9,"nodeType":"183","messageId":"184","endLine":70,"endColumn":51,"fix":"191"},{"ruleId":"164","severity":2,"message":"165","line":77,"column":25,"nodeType":"156","messageId":"166","endLine":77,"endColumn":35},{"ruleId":"167","severity":1,"message":"174","line":83,"column":39,"nodeType":"169","messageId":"170","endLine":83,"endColumn":41},{"ruleId":"192","severity":1,"message":"193","line":85,"column":43,"nodeType":"169","messageId":"194","endLine":85,"endColumn":44},{"ruleId":"167","severity":1,"message":"174","line":94,"column":26,"nodeType":"169","messageId":"170","endLine":94,"endColumn":28},{"ruleId":"167","severity":1,"message":"174","line":95,"column":27,"nodeType":"169","messageId":"170","endLine":95,"endColumn":29},{"ruleId":"164","severity":2,"message":"165","line":102,"column":25,"nodeType":"156","messageId":"166","endLine":102,"endColumn":35},{"ruleId":"167","severity":1,"message":"174","line":109,"column":17,"nodeType":"169","messageId":"170","endLine":109,"endColumn":19},{"ruleId":"167","severity":1,"message":"174","line":133,"column":28,"nodeType":"169","messageId":"170","endLine":133,"endColumn":30},{"ruleId":"192","severity":1,"message":"193","line":135,"column":43,"nodeType":"169","messageId":"194","endLine":135,"endColumn":44},{"ruleId":"154","severity":1,"message":"195","line":171,"column":7,"nodeType":"156","messageId":"157","endLine":171,"endColumn":17},{"ruleId":"167","severity":1,"message":"174","line":177,"column":32,"nodeType":"169","messageId":"170","endLine":177,"endColumn":34},{"ruleId":"167","severity":1,"message":"174","line":180,"column":39,"nodeType":"169","messageId":"170","endLine":180,"endColumn":41},{"ruleId":"192","severity":1,"message":"193","line":182,"column":43,"nodeType":"169","messageId":"194","endLine":182,"endColumn":44},{"ruleId":"154","severity":1,"message":"196","line":221,"column":13,"nodeType":"156","messageId":"157","endLine":221,"endColumn":21},{"ruleId":"164","severity":2,"message":"165","line":226,"column":25,"nodeType":"156","messageId":"166","endLine":226,"endColumn":35},{"ruleId":"167","severity":1,"message":"174","line":235,"column":39,"nodeType":"169","messageId":"170","endLine":235,"endColumn":41},{"ruleId":"192","severity":1,"message":"193","line":237,"column":43,"nodeType":"169","messageId":"194","endLine":237,"endColumn":44},{"ruleId":"160","severity":1,"message":"197","line":254,"column":30,"nodeType":"162","endLine":254,"endColumn":36,"suggestions":"198"},{"ruleId":"167","severity":1,"message":"174","line":258,"column":43,"nodeType":"169","messageId":"170","endLine":258,"endColumn":45},{"ruleId":"171","severity":1,"message":"172","line":262,"column":15,"nodeType":"173","endLine":262,"endColumn":57},{"ruleId":"167","severity":1,"message":"174","line":262,"column":68,"nodeType":"169","messageId":"170","endLine":262,"endColumn":70},{"ruleId":"167","severity":1,"message":"174","line":265,"column":87,"nodeType":"169","messageId":"170","endLine":265,"endColumn":89},{"ruleId":"167","severity":1,"message":"174","line":265,"column":119,"nodeType":"169","messageId":"170","endLine":265,"endColumn":121},{"ruleId":"167","severity":1,"message":"174","line":268,"column":87,"nodeType":"169","messageId":"170","endLine":268,"endColumn":89},{"ruleId":"167","severity":1,"message":"174","line":268,"column":130,"nodeType":"169","messageId":"170","endLine":268,"endColumn":132},{"ruleId":"167","severity":1,"message":"174","line":273,"column":46,"nodeType":"169","messageId":"170","endLine":273,"endColumn":48},{"ruleId":"167","severity":1,"message":"168","line":327,"column":52,"nodeType":"169","messageId":"170","endLine":327,"endColumn":54},{"ruleId":"167","severity":1,"message":"174","line":332,"column":31,"nodeType":"169","messageId":"170","endLine":332,"endColumn":33},{"ruleId":"167","severity":1,"message":"174","line":339,"column":96,"nodeType":"169","messageId":"170","endLine":339,"endColumn":98},{"ruleId":"167","severity":1,"message":"174","line":340,"column":81,"nodeType":"169","messageId":"170","endLine":340,"endColumn":83},{"ruleId":"167","severity":1,"message":"168","line":343,"column":45,"nodeType":"169","messageId":"170","endLine":343,"endColumn":47},{"ruleId":"167","severity":1,"message":"174","line":348,"column":147,"nodeType":"169","messageId":"170","endLine":348,"endColumn":149},{"ruleId":"167","severity":1,"message":"174","line":352,"column":152,"nodeType":"169","messageId":"170","endLine":352,"endColumn":154},{"ruleId":"167","severity":1,"message":"174","line":356,"column":148,"nodeType":"169","messageId":"170","endLine":356,"endColumn":150},{"ruleId":"167","severity":1,"message":"174","line":360,"column":150,"nodeType":"169","messageId":"170","endLine":360,"endColumn":152},{"ruleId":"167","severity":1,"message":"168","line":372,"column":19,"nodeType":"169","messageId":"170","endLine":372,"endColumn":21},{"ruleId":"167","severity":1,"message":"174","line":419,"column":75,"nodeType":"169","messageId":"170","endLine":419,"endColumn":77},{"ruleId":"154","severity":1,"message":"177","line":1,"column":16,"nodeType":"156","messageId":"157","endLine":1,"endColumn":26},{"ruleId":"199","severity":1,"message":"200","line":9,"column":5,"nodeType":"201","messageId":"170","endLine":9,"endColumn":9},{"ruleId":"199","severity":1,"message":"200","line":14,"column":5,"nodeType":"201","messageId":"170","endLine":14,"endColumn":9},{"ruleId":"199","severity":1,"message":"200","line":19,"column":5,"nodeType":"201","messageId":"170","endLine":19,"endColumn":9},{"ruleId":"199","severity":1,"message":"200","line":24,"column":5,"nodeType":"201","messageId":"170","endLine":24,"endColumn":9},{"ruleId":"199","severity":1,"message":"200","line":32,"column":5,"nodeType":"201","messageId":"170","endLine":32,"endColumn":9},{"ruleId":"199","severity":1,"message":"200","line":39,"column":51,"nodeType":"201","messageId":"170","endLine":39,"endColumn":55},{"ruleId":"167","severity":1,"message":"174","line":39,"column":79,"nodeType":"169","messageId":"170","endLine":39,"endColumn":81},{"ruleId":"199","severity":1,"message":"200","line":42,"column":51,"nodeType":"201","messageId":"170","endLine":42,"endColumn":55},{"ruleId":"167","severity":1,"message":"174","line":42,"column":80,"nodeType":"169","messageId":"170","endLine":42,"endColumn":82},{"ruleId":"199","severity":1,"message":"200","line":57,"column":8,"nodeType":"201","messageId":"170","endLine":57,"endColumn":12},{"ruleId":"150","replacedBy":"202"},{"ruleId":"152","replacedBy":"203"},{"ruleId":"154","severity":1,"message":"204","line":1,"column":54,"nodeType":"156","messageId":"157","endLine":1,"endColumn":65},{"ruleId":"154","severity":1,"message":"205","line":8,"column":8,"nodeType":"156","messageId":"157","endLine":8,"endColumn":18},{"ruleId":"160","severity":1,"message":"206","line":12,"column":27,"nodeType":"156","endLine":12,"endColumn":38},{"ruleId":"167","severity":1,"message":"168","line":21,"column":19,"nodeType":"169","messageId":"170","endLine":21,"endColumn":21},{"ruleId":"160","severity":1,"message":"207","line":81,"column":5,"nodeType":"162","endLine":81,"endColumn":16,"suggestions":"208"},{"ruleId":null,"fatal":true,"severity":2,"message":"209","line":13,"column":103},{"ruleId":"167","severity":1,"message":"174","line":8,"column":27,"nodeType":"169","messageId":"170","endLine":8,"endColumn":29},{"ruleId":"167","severity":1,"message":"174","line":12,"column":15,"nodeType":"169","messageId":"170","endLine":12,"endColumn":17},{"ruleId":"160","severity":1,"message":"210","line":14,"column":6,"nodeType":"162","endLine":14,"endColumn":23,"suggestions":"211"},{"ruleId":"167","severity":1,"message":"174","line":30,"column":36,"nodeType":"169","messageId":"170","endLine":30,"endColumn":38},"no-native-reassign",["212"],"no-negated-in-lhs",["213"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'isMobile' is assigned a value but never used.","'wasMobile' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["214"],"no-undef","'csrf_token' is not defined.","undef","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","Expected '===' and instead saw '=='.","React Hook React.useEffect has a missing dependency: 'addToast'. Either include it or remove the dependency array.",["215"],"'useContext' is defined but never used.","'setCallBack' is defined but never used.","'setSize' is assigned a value but never used.","'setFilters' is assigned a value but never used.","no-useless-computed-key","Unnecessarily computed property ['ACL_USER_ADD'] found.","Property","unnecessarilyComputedProperty",{"range":"216","text":"217"},"Unnecessarily computed property ['ACL_USER_EDIT'] found.",{"range":"218","text":"219"},"Unnecessarily computed property ['ACL_USER_DELETE'] found.",{"range":"220","text":"221"},"Unnecessarily computed property ['ACL_USER_RETRIEVE'] found.",{"range":"222","text":"223"},"no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'statusCode' is assigned a value but never used.","'response' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'Fetch'. Either include it or remove the dependency array.",["224"],"no-eval","eval can be harmful.","CallExpression",["212"],["213"],"'useCallback' is defined but never used.","'getFilters' is assigned a value but never used.","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","React Hook useCallback has a missing dependency: 'confirm'. Either include it or remove the dependency array. You can also do a functional update 'setConfirm(c => ...)' if you only need 'confirm' in the 'setConfirm' call.",["225"],"Parsing error: Unexpected token\n\n  11 |           {\n  12 |             toasts.map((toast, i) =>(\n> 13 |               <Toast key={i} id={toast.id} title={toast.title} backgroundColor={toast.backgroundColor}, confirm={toast.confirm}>\n     |                                                                                                       ^\n  14 |                 {typeof toast.content == 'object' ? toast.content.map((item,i) => <li key={i}>{item}</li>) : toast.content}\n  15 |               </Toast>\n  16 |             ))","React Hook useEffect has a missing dependency: 'confirm'. Either include it or remove the dependency array.",["226"],"no-global-assign","no-unsafe-negation",{"desc":"227","fix":"228"},{"desc":"229","fix":"230"},[2012,2028],"'ACL_USER_ADD'",[2055,2072],"'ACL_USER_EDIT'",[2100,2119],"'ACL_USER_DELETE'",[2149,2170],"'ACL_USER_RETRIEVE'",{"desc":"231","fix":"232"},{"desc":"233","fix":"234"},{"desc":"235","fix":"236"},"Update the dependencies array to be: [props]",{"range":"237","text":"238"},"Update the dependencies array to be: [addToast]",{"range":"239","text":"240"},"Update the dependencies array to be: [Fetch, page]",{"range":"241","text":"242"},"Update the dependencies array to be: [confirm]",{"range":"243","text":"244"},"Update the dependencies array to be: [confirm, id, removeToast]",{"range":"245","text":"246"},[505,507],"[props]",[481,483],"[addToast]",[7696,7702],"[Fetch, page]",[1951,1962],"[confirm]",[427,444],"[confirm, id, removeToast]"]